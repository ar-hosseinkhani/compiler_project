productions = {
    "Program": [["Declaration-list", "$"]],
    "Declaration-list": [["Declaration", "Declaration-list"], ["epsilon"]],
    "Declaration": [["Declaration-initial", "Declaration-prime"]],
    "Declaration-initial": [["Type-specifier", "ID", "#gp_id"]],
    "Declaration-prime": [["Fun-declaration-prime"], ["Var-declaration-prime"]],
    "Var-declaration-prime": [[";", "#add_id"], ["[", "NUM", "#gp_id", "]", ";", "#add_array"]],
    "Fun-declaration-prime": [["#add_fun", "(", "Params", ")", "#set_nopar", "Compound-stmt"]],
    "Type-specifier": [["int", "#push_int"], ["void", "#push_void"]],
    "Params": [
        ["int", "#push_int", "ID", "#gp_id", "#inc_par", "Param-prime", "Param-list"],
        ["void"],
    ],
    "Param-list": [[",", "Param", "Param-list"], ["epsilon"]],
    "Param": [["Declaration-initial", "Param-prime", "#inc_par"]],
    "Param-prime": [["[", "]", "#add_pararr"], ["epsilon", "#add_id"]],
    "Compound-stmt": [["{", "Declaration-list", "Statement-list", "}"]],
    "Statement-list": [["Statement", "Statement-list"], ["epsilon"]],
    "Statement": [
        ["Expression-stmt"],
        ["Compound-stmt"],
        ["Selection-stmt"],
        ["Iteration-stmt"],
        ["Return-stmt"],
    ],
    "Expression-stmt": [["Expression", ";", "#pop"], ["break", ";", "#set_break"], [";"]],
    "Selection-stmt": [
        ["if", "(", "Expression", ")", "#save", "Statement", "#jpf_if", "Else-stmt", "#jp"]
    ],
    "Else-stmt": [["endif"], ["else", "Statement", "endif"]],
    "Iteration-stmt": [["repeat", "#save_r", "Statement", "until", "(", "Expression", ")", "#jpf_repeat"]],
    "Return-stmt": [["return", "Return-stmt-prime"]],
    "Return-stmt-prime": [[";"], ["Expression", ";"]],
    "Expression" : [["Simple-expression-zegond"], ["ID", "B"]],
    "B": [["=", "Expression"], ["[", "Expression", "]", "H"], ["Simple-expression-prime"]],
    "H": [["=", "Expression"], ["G", "D", "C"]],
    "Simple-expression-zegond": [["Additive-expression-zegond", "C"]],
    "Simple-expression-prime": [["Additive-expression-prime", "C"]],
    "C": [["Relop", "Additive-expression"], ["epsilon"]],
    "Relop": [["<", "#push_LT"], ["==", "#push_EQ"]],
    "Additive-expression": [["Term", "D"]],
    "Additive-expression-prime": [["Term-prime", "D"]],
    "Additive-expression-zegond": [["Term-zegond", "D"]],
    "D": [["Addop", "Term", "D"], ["epsilon"]],
    "Addop": [["+", "#push_ADD"], ["-", "#push_SUB"]],
    "Term": [["Factor", "G"]],
    "Term-prime": [["Factor-prime", "G"]],
    "Term-zegond": [["Factor-zegond", "G"]],
    "G": [["*", "#push_MULT", "Factor", "G"], ["epsilon"]],
    "Factor": [["(", "Expression", ")"], ["ID", "Var-call-prime"], ["NUM"]],
    "Var-call-prime": [["(", "Args", ")"], ["Var-prime"]],
    "Var-prime": [["[", "Expression", "]"], ["epsilon"]],
    "Factor-prime": [["(", "Args", ")"], ["epsilon"]],
    "Factor-zegond": [["(", "Expression", ")"], ["NUM"]],
    "Args": [["Arg-list"], ["epsilon"]],
    "Arg-list": [["Expression", "Arg-list-prime"]],
    "Arg-list-prime": [[",", "Expression", "Arg-list-prime"], ["epsilon"]],
}
